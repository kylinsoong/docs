---

# brokered address space plans
- import_role:
    name: enmasse_plans_brokered
  when: address_space_type == 'brokered'

# standard address space plans
- import_role:
    name: enmasse_plans_standard
  when: address_space_type == 'standard'

# address controller singletenant
- import_role:
    name: enmasse_address_controller_singletenant

# none authentication service
- import_role: 
    name: enmasse_none_authentication_service
  when: '"none" in authentication_services'
  vars: 
    crt_cn: "none-authservice.{{ ocp_project }}.svc.cluster.local"
    crt_cn_alt: "subjectAltName=DNS:none-authservice.{{ ocp_project }}.svc.cluster,DNS:none-authservice.{{ ocp_project }}.svc,DNS:none-authservice"
    ca_serial: "{{ playbook_work_dir }}/none-authservice.srl"
    ca_key: "{{ playbook_work_dir }}/none-authservice.ca_key"
    ca_crt: "{{ playbook_work_dir }}/none-authservice.ca_crt"
    ca_csr: "{{ playbook_work_dir }}/none-authservice.csr"
    crt_out: "{{ playbook_work_dir }}/none-authservice.crt"
    key_out: "{{ playbook_work_dir }}/none-authservice.key"
    tls_secret_name: "{{ none_authservice_secret_name }}"

# standard authentication service
- import_role: 
    name: enmasse_standard_authentication_service
  when: '"standard" in authentication_services'
  vars: 
    crt_cn: "standard-authservice.{{ ocp_project }}.svc.cluster.local"
    crt_cn_alt: "subjectAltName=DNS:standard-authservice.{{ ocp_project }}.svc.cluster,DNS:standard-authservice.{{ ocp_project }}.svc,DNS:standard-authservice"
    ca_serial: "{{ playbook_work_dir }}/standard-authservice.srl"
    ca_key: "{{ playbook_work_dir }}/standard-authservice.ca_key"
    ca_crt: "{{ playbook_work_dir }}/standard-authservice.ca_crt"
    ca_csr: "{{ playbook_work_dir }}/standard-authservice.csr"
    crt_out: "{{ playbook_work_dir }}/standard-authservice.crt"
    key_out: "{{ playbook_work_dir }}/standard-authservice.key"
    tls_secret_name: "{{ standard_authservice_secret_name }}"

# address controller
- import_role: 
    name: enmasse_address_controller

# messaging certificate
- import_role: 
    name: tls_secret
  when: >
    (create_external_messaging_certificate is defined and create_external_messaging_certificate|bool == true)
  vars: 
    crt_cn: "messaging.{{ ocp_project }}.svc.cluster.local"
    crt_cn_alt: "subjectAltName=DNS:messaging.{{ ocp_project }}.svc.cluster.local,DNS:messaging.{{ ocp_project }}.svc.cluster,DNS:messaging.{{ ocp_project }}.svc,DNS:messaging"
    ca_serial: "{{ playbook_work_dir }}/massaging.srl"
    ca_key: "{{ playbook_work_dir }}/messaging.ca_key"
    ca_crt: "{{ playbook_work_dir }}/messaging.ca_crt"
    ca_csr: "{{ playbook_work_dir }}/messaging.csr"
    crt_out: "{{ playbook_work_dir }}/messaging.crt"
    key_out: "{{ playbook_work_dir }}/messaging.key"
    tls_secret_name: "{{ external_messaging_secret_name }}"

# address-space
- import_tasks: create_address_space.yml
  when: create_address_space is defined and create_address_space|bool == true

# create address
- import_tasks: create_address_loop.yml
  when: create_address is defined and create_address|bool == true
